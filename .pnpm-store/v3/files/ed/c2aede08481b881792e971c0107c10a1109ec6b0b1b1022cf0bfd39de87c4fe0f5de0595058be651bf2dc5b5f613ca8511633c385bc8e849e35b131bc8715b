import { signal } from '@preact/signals';
import { getFieldStore } from './getFieldStore';
import { getPathValue } from './getPathValue';
/**
 * Initializes and returns the store of a field.
 *
 * @param form The form of the field.
 * @param name The name of the field.
 *
 * @returns The reactive store.
 */
export function initializeFieldStore(form, name) {
    // Initialize store on first request
    if (!getFieldStore(form, name)) {
        // Get initial value of field
        const initialValue = getPathValue(name, form.internal.initialValues);
        // Add store of field to form
        form.internal.fields[name] = {
            // Signals
            elements: signal([]),
            initialValue: signal(initialValue),
            startValue: signal(initialValue),
            value: signal(initialValue),
            error: signal(''),
            active: signal(false),
            touched: signal(false),
            dirty: signal(false),
            // Other
            validate: [],
            transform: [],
            consumers: new Set(),
        };
        // Add name of field to form
        form.internal.fieldNames.value = [...form.internal.fieldNames.peek(), name];
    }
    // Return store of field
    return getFieldStore(form, name);
}
