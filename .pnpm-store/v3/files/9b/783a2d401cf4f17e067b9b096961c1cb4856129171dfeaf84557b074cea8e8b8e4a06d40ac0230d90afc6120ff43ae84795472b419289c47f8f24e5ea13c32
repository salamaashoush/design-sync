'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@dessert-box/core');
var react = require('react');
var functionSerializer = require('@vanilla-extract/css/functionSerializer');
var css = require('@vanilla-extract/css');
var styledRuntime_dist_dessertBoxReactStyledRuntime = require('../styledRuntime/dist/dessert-box-react-styledRuntime.cjs.prod.js');

function styled(el, rules) {
  const className = css.style(rules);
  const args = [el, className];
  const Component = styledRuntime_dist_dessertBoxReactStyledRuntime.styledRuntime(el, className);
  functionSerializer.addFunctionSerializer(Component, {
    importPath: '@dessert-box/react/styledRuntime',
    importName: 'styledRuntime',
    // TODO: Fix this type, was complaining about string not being assignable to Serializable from VE lib
    args: args
  });
  return Component;
}

// adapted from https://github.com/kripod/react-polymorphic-box

const defaultElement = 'div';
function createBox({
  atoms: atomsFn,
  defaultClassName
}) {
  const Box = /*#__PURE__*/react.forwardRef(({
    className,
    style,
    as,
    ...props
  }, ref) => {
    const Element = as || defaultElement;
    const {
      atomProps,
      customProps,
      otherProps
    } = core.extractAtomsFromProps(props, atomsFn);
    return /*#__PURE__*/react.createElement(Element, {
      ref,
      style: {
        ...style,
        ...customProps
      },
      ...otherProps,
      className: core.composeClassNames(className, atomsFn(atomProps), defaultClassName)
    });
  });
  Box.displayName = 'DessertBox';
  return Box;
}
function createBoxWithAtomsProp({
  atoms: atomsFn,
  defaultClassName
}) {
  const Box = /*#__PURE__*/react.forwardRef(({
    className,
    style,
    atoms,
    as,
    ...props
  }, ref) => {
    const Element = as || defaultElement;
    return /*#__PURE__*/react.createElement(Element, {
      ref,
      ...props,
      className: core.composeClassNames(className, atomsFn(atoms), defaultClassName)
    });
  });
  Box.displayName = 'DessertBox';
  return Box;
}

exports.createBox = createBox;
exports.createBoxWithAtomsProp = createBoxWithAtomsProp;
exports.styled = styled;
