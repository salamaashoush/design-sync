import { batch } from '@preact/signals';
import { updateFieldDirty } from './updateFieldDirty';
import { validateIfRequired } from './validateIfRequired';
/**
 * Handles the input, change and blur event of a field.
 *
 * @param form The form of the field.
 * @param field The store of the field.
 * @param name The name of the field.
 * @param event The event of the field.
 * @param validationModes The modes of the validation.
 * @param inputValue The value of the input.
 */
export function handleFieldEvent(form, field, name, event, validationModes, inputValue) {
    batch(() => {
        // Update value state
        field.value.value = field.transform.reduce((current, transformation) => transformation(current, event), inputValue ?? field.value.value);
        // Update touched state
        field.touched.value = true;
        form.touched.value = true;
        // Update dirty state
        updateFieldDirty(form, field);
        // Validate value if required
        validateIfRequired(form, field, name, { on: validationModes });
    });
}
